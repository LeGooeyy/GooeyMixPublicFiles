import funkin.graphics.shaders.AdjustColorShader;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import flixel.addons.display.FlxBackdrop;
import flixel.util.FlxTimer;
import flixel.FlxG;

class DrippyPopErectStage extends Stage
{
	var singDir:Array<String> = ['LEFT', 'DOWN', 'UP', 'RIGHT'];
	function new()
	{
		super('drippypopErect');
	}

  var colorShaderBf:AdjustColorShader;
  var colorShaderDad:AdjustColorShader;
  var colorShaderGf:AdjustColorShader;

  
  var mist0:FlxBackdrop;
  var mist1:FlxBackdrop;
  var mist2:FlxBackdrop;


	function buildStage()
	{
		super.buildStage();

    
    colorShaderBf = new AdjustColorShader();
    colorShaderDad = new AdjustColorShader();
    colorShaderGf = new AdjustColorShader();

    colorShaderBf.brightness = -5;
    colorShaderBf.hue = -26;
    colorShaderBf.contrast = 0;
	colorShaderBf.saturation = -12;

    colorShaderGf.brightness = -5;
    colorShaderGf.hue = -26;
    colorShaderGf.contrast = 0;
	colorShaderGf.saturation = -12;

    colorShaderDad.brightness = -5;
    colorShaderDad.hue = -26;
    colorShaderDad.contrast = -0;
	colorShaderDad.saturation = -12;


	 mist0 = new FlxBackdrop(Paths.image('gooeyMix/extra/drip/mistBack'), 0x01);
    mist0.setPosition(-650, -700);
    mist0.scrollFactor.set(1.2, 1.2);
    mist0.zIndex = 200;
    mist0.blend = 0;
    mist0.color = 0xFF5c5c5c;
    mist0.alpha = 0.6;
    mist0.velocity.x = 172;

    PlayState.instance.currentStage.add(mist0);
    PlayState.instance.currentStage.refresh(); // Apply z-index.

    mist1 = new FlxBackdrop(Paths.image('gooeyMix/extra/drip/mistBack'), 0x01);
    mist1.setPosition(-650, -700);
    mist1.scrollFactor.set(1.1, 1.1);
    mist1.zIndex = 51;
    mist1.blend = 0;
    mist1.color = 0xFF5c5c5c;
    mist1.alpha = 0.6;
    mist1.velocity.x = 150;

    PlayState.instance.currentStage.add(mist1);
    PlayState.instance.currentStage.refresh(); // Apply z-index.


    mist2 = new FlxBackdrop(Paths.image('gooeyMix/extra/drip/mistMid'), 0x01);
    mist2.setPosition(-650, -700);
    mist2.scrollFactor.set(0.95, 0.95);
    mist2.zIndex = 202;
    mist2.blend = 0;
    mist2.color = 0xFF5c5c5c;
    mist2.alpha = 0.5;
    mist2.velocity.x = -50;
    mist2.scale.set(0.8, 0.8);

    PlayState.instance.currentStage.add(mist2);
    PlayState.instance.currentStage.refresh(); // Apply z-index.

	}

  var _timer:Float = 0;
	function onUpdate(event:UpdateScriptEvent):Void
	{
		super.onUpdate(event);

		
    _timer += event.elapsed;
    mist0.y = 60 + (Math.sin(_timer * 0.35) * 70);
    mist1.y = -100 + (Math.sin(_timer * 0.3) * 80);
    mist2.y = -430 + (Math.sin(_timer * 0.3) * 70);
	
    if (FlxG.save.data.gooeyShaders != false)
	{
    if(PlayState.instance.currentStage.getBoyfriend() != null && PlayState.instance.currentStage.getBoyfriend().shader == null){
      PlayState.instance.currentStage.getBoyfriend().shader = colorShaderBf;
			PlayState.instance.currentStage.getGirlfriend().shader = colorShaderGf;
			PlayState.instance.currentStage.getDad().shader = colorShaderDad;
    }
  }

	}

	function onBeatHit(event:SongTimeScriptEvent):Void{
		super.onBeatHit(event);
		{
		
			if (event.beat <= 283)
			{
				getGirlfriend().playAnimation('idle-alt', false, false);
			}
		}
	}

  function onStepHit(event:SongTimeScriptEvent):Void
	{
		super.onStepHit(event);

		
	}
	public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);
                PlayState.instance.currentStage.refresh();
				getGirlfriend().playAnimation('idle-alt', false, false);
		
	}
  function onNoteHit(event:HitNoteScriptEvent):Void
	{       
	        if (event.note.noteData.getMustHitNote()){
			switch(event.note.kind) 
			{
				case "gfsing":
				 holdTimer = 0;
			     Gfsing(event.note.noteData.getDirection(), false);
				 return;
            }
            }		
		super.onNoteHit(event);
	}
	public override function Gfsing(dir:Int, miss:Bool = false, ?suffix:String = ''):Void
	{
	  	var anim:String = 'sing' + singDir[dir];
	  	getGirlfriend().playAnimation(anim, true, true);
	}

}
