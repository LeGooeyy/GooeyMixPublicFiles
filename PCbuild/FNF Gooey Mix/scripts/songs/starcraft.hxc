import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import funkin.play.PlayState;
import funkin.play.song.Song;
import funkin.save.Save;
import funkin.play.cutscene.VideoCutscene;
import funkin.play.cutscene.CutsceneType;
import funkin.play.PlayStatePlaylist;
import flixel.FlxG;
import funkin.graphics.FunkinSprite;
import Date;

class StarcraftSong extends Song {
	public function new() {
		super('starcraft');

		this.hasPlayedCutscene = false;
	}

	function onCreate(event:ScriptEvent):Void {
		super.onCreate(event);
		PlayState.instance.currentStage.getNamedProp('boppers').danceEvery = 2;
		PlayState.instance.currentStage.getNamedProp('rad').danceEvery = 4;
		this.hasPlayedCutscene = false;

		if (!FlxG.onMobile) {
			PlayState.instance.discordRPCAlbum = "https://raw.githubusercontent.com/LeGooeyy/GooeyMixDiscordIcons/refs/heads/main/assets/album-covers/"
				+ PlayState.instance.currentChart.album
				+ ".png?raw=true";
			PlayState.instance.discordRPCIcon = "https://raw.githubusercontent.com/LeGooeyy/GooeyMixDiscordIcons/refs/heads/main/assets/icons/"
				+ PlayState.instance.currentChart.characters.opponent
				+ ".png?raw=true?t="
				+ Date.now().getTime();
		}
	}

	public override function isSongNew(currentDifficulty:String, currentVariation:String):Bool {
		return !Save.instance.hasBeatenSong(this.id, null, '');
	}

	function onSongRetry(event:ScriptEvent) {
		super.onSongRetry(event);
		PlayState.instance.currentStage.getNamedProp('extraSpotlight').alpha = 0;
		PlayState.instance.currentStage.getNamedProp('extraSpotlight2').alpha = 0;
		PlayState.instance.currentStage.getNamedProp('spotlight2').alpha = 0.05;
		PlayState.instance.currentStage.getNamedProp('boppers').danceEvery = 2;
		PlayState.instance.currentStage.getNamedProp('rad').danceEvery = 4;
	}

	function onStepHit(event:SongTimeScriptEvent):Void {
		super.onStepHit(event);
		if (event.step == 885) {
			PlayState.instance.currentStage.getNamedProp('boppers').danceEvery = 20;
			PlayState.instance.currentStage.getNamedProp('rad').danceEvery = 20;
			FlxTween.tween(PlayState.instance.currentStage.getNamedProp('extraSpotlight'), {alpha: 0.5}, 2.8, {ease: FlxEase.quartin});
			FlxTween.tween(PlayState.instance.currentStage.getNamedProp('extraSpotlight2'), {alpha: 0.5}, 2.8, {ease: FlxEase.quartin});
			FlxTween.tween(PlayState.instance.currentStage.getNamedProp('spotlight2'), {alpha: 0}, 1.2, {ease: FlxEase.quartin});
		}
		if (event.step == 911 || event.step == 16 || event.step == 1310 || event.step == 530) {
			PlayState.instance.currentStage.getNamedProp('boppers').danceEvery = 2;
			PlayState.instance.currentStage.getNamedProp('rad').danceEvery = 4;
		}
		if (event.step == 1038
			|| event.step == 1
			|| event.step == 275
			|| event.step == 786
			|| event.step == 1343
			|| event.step == 658) {
			PlayState.instance.currentStage.getNamedProp('boppers').danceEvery = 1;
			PlayState.instance.currentStage.getNamedProp('rad').danceEvery = 2;
		}
		if (event.step == 1169 || event.step == 755) {
			PlayState.instance.currentStage.getNamedProp('boppers').danceEvery = 20;
			PlayState.instance.currentStage.getNamedProp('rad').danceEvery = 20;
		}
		if (event.step == 1182) {
			PlayState.instance.currentStage.getNamedProp('boppers').danceEvery = 1;
			PlayState.instance.currentStage.getNamedProp('rad').danceEvery = 2;
			FlxTween.tween(PlayState.instance.currentStage.getNamedProp('extraSpotlight'), {alpha: 0}, 1.2, {ease: FlxEase.quartin});
			FlxTween.tween(PlayState.instance.currentStage.getNamedProp('extraSpotlight2'), {alpha: 0}, 1.2, {ease: FlxEase.quartin});
			FlxTween.tween(PlayState.instance.currentStage.getNamedProp('spotlight2'), {alpha: 0.05}, 1.2, {ease: FlxEase.quartin});
		}
	}

	var hasPlayedCutscene:Bool = false;

	public override function onSongEnd(event:CountdownScriptEvent):Void {
		super.onSongEnd(event);

		// Keep the cutscene from playing outside of story mode.
		if (!PlayStatePlaylist.isStoryMode)
			hasPlayedCutscene = true;

		if (!hasPlayedCutscene) {
			trace('Pausing ending to play a video cutscene (`starcraft`)');

			hasPlayedCutscene = true;

			// Add a black background behind the cutscene to fix a transition bug!
			trace('Adding black background behind cutscene over UI');
			var bgSprite = new FunkinSprite(-100, -100);
			bgSprite.makeSolidColor(2000, 2500, 0xFF000000);
			bgSprite.cameras = [PlayState.instance.camHUD]; // Show over the HUD.
			bgSprite.zIndex = 1000000;
			PlayState.instance.add(bgSprite);
			PlayState.instance.refresh();

			event.cancel(); // CANCEL THE COUNTDOWN!

			startVideo();
		} else {
			// Make sure the cutscene can play again next time!
			hasPlayedCutscene = false;
			// DO NOT CANCEL THE EVENT!
		}
	}

	function startVideo() {
		VideoCutscene.play(Paths.videos('starcraftCutscene'), CutsceneType.ENDING);
		// This will call onSongEnd() again so make sure the flag is set!
		hasPlayedCutscene = true;
	}
}
