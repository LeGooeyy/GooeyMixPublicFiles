import funkin.PlayerSettings;
import funkin.modding.module.Module;
import funkin.util.ReflectUtil;
import flixel.FlxG;
import funkin.ui.options.OptionsState;
import funkin.audio.FunkinSound;
import funkin.ui.FullScreenScaleMode;
import flixel.FlxSprite;
import funkin.Assets;
import openfl.media.Sound;
import funkin.util.WindowUtil;
import CustomIcon;
import funkin.util.Constants;
import funkin.ui.freeplay.FreeplayState;
import funkin.ui.story.StoryMenuState;
import funkin.ui.mainmenu.MainMenuState;
import funkin.ui.title.TitleState;
import funkin.ui.charSelect.CharSelectSubState;

class GooeyMenuOption extends Module {
	var addedTitle:Bool = false;

	var optionNumber:Int = 0;

	public function new() {
		super('GooeyMenuOption');
	}

	var gooeySongs:Array<String> = ['gooey', 'slimeball', 'starcraft'];
	var newIcon = null;
	var curIcon = Constants.TITLE;

	function bfWindow() {
		if (FlxG.state.curChar != 'gooey') {
			newIcon = 'Friday Night Funkin\'';
			if (newIcon != curIcon) {
				if (!FlxG.onMobile) {
				WindowUtil.setWindowTitle('Friday Night Funkin\'');
				CustomIcon.setIcon(Paths.image('icon16'));
				curIcon = newIcon;
				}
			}
		}
	}

	function gooeyWindow() {
		newIcon = 'Gooey Mix';
		if (newIcon != curIcon) {
			if (!FlxG.onMobile) {
			WindowUtil.setWindowTitle('Friday Night Funkin\': Gooey Mix');
			CustomIcon.setIcon(Paths.image('icon16Gooey'));
			curIcon = newIcon;
			}
		}
	}

	override function onUpdate(event:UpdateScriptEvent) {
		super.onUpdate(event);

		if (FlxG.state.subState is FreeplayState) {
			if (gooeySongs.contains(FlxG.state?.subState?.grpCapsules?.members[FlxG.state.subState.curSelected]?.freeplayData?.data?.id)
				|| FreeplayState.rememberedCharacterId == 'gooey') {
				gooeyWindow();
			} else {
				bfWindow();
			}
		} else if (FlxG.state is CharSelectSubState) {
			if (FlxG.state.curChar == 'gooey') {
				gooeyWindow();
			} else {
				bfWindow();
			}
		} else if (FlxG.state is MainMenuState) {
			if (FreeplayState.rememberedCharacterId == 'gooey') {
				gooeyWindow();
			} else {
				bfWindow();
			}
		} else if (FlxG.state is StoryMenuState) {
			if (FlxG.state?.currentLevelId == 'week60037') {
				gooeyWindow();
			} else {
				bfWindow();
			}
		}

		if (FlxG.save.data.GooeyMixMenu != 'Always On'
			&& FlxG.save.data.GooeyMixMenu != 'Gooey Selected'
			&& FlxG.save.data.GooeyMixMenu != 'Off')
			FlxG.save.data.GooeyMixMenu = 'Always On';

		// TITLE SCREEN
		if (ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.title.TitleState") {
			FlxG.mouse.visible = false;

			if (FlxG.save.data.GooeyMixMenu == 'Always On'
				|| (FlxG.save.data.GooeyMixMenu == 'Gooey Selected' && FlxG.save.data.rememberedStartupCharacter == "gooey")) {
				if (FlxG.state.logoBl != null && FlxG.state.gfDance != null && FlxG.state.titleText != null && FlxG.state.skippedIntro && !addedTitle) {
					addedTitle = true;

					addTitleScreenObjects();
				}
			}
		}

		// MENU BACKGROUND
		if (ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.mainmenu.MainMenuState") {
			if (FlxG.state.magenta != null) {
				if (FlxG.save.data.GooeyMixMenu == 'Always On'
					|| (FlxG.save.data.GooeyMixMenu == 'Gooey Selected' && FlxG.save.data.rememberedStartupCharacter == "gooey")) {
					if (FlxG.state.magenta.graphic.key == 'assets/images/menuBGMagenta.png') {
						FlxG.state.magenta.loadGraphic(Paths.image('menuBGMagentaGooey'));
						FlxG.state.members[0].loadGraphic(Paths.image('menuBGgooey'));
					}
				} else {
					if (FlxG.state.magenta.graphic.key == 'assets/images/menuBGMagentaGooey.png') {
						FlxG.state.magenta.loadGraphic(Paths.image('menuBGMagenta'));
						FlxG.state.members[0].loadGraphic(Paths.image('menuBG'));
					}
				}
			}
		}

		if (ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.options.OptionsState") {
			if (FlxG.state.members[0] != null) {
				if (FlxG.save.data.GooeyMixMenu == 'Always On'
					|| (FlxG.save.data.GooeyMixMenu == 'Gooey Selected' && FlxG.save.data.rememberedStartupCharacter == "gooey")) {
					if (FlxG.state?.members[0]?.graphic.key == 'assets/images/menuBG.png') {
						FlxG.state.members[0].loadGraphic(Paths.image('menuBGgooey'));
					}
				} else {
					if (FlxG.state?.members[0]?.graphic.key == 'assets/images/menuBGgooey.png') {
						FlxG.state.members[0].loadGraphic(Paths.image('menuBG'));
					}
				}
			}
		}

		if (ReflectUtil.getClassNameOf(FlxG.state.subState) == "funkin.ui.debug.DebugMenuSubState") {
			if (FlxG.state.subState.members[3] != null) {
				if (FlxG.save.data.GooeyMixMenu == 'Always On'
					|| (FlxG.save.data.GooeyMixMenu == 'Gooey Selected' && FlxG.save.data.rememberedStartupCharacter == "gooey")) {
					if (FlxG.state.subState.members[3].graphic.assetPath == 'assets/images/menuDesat.png') {
						FlxG.state.subState.members[3].loadGraphic(Paths.image('menuDesatGooey'));
					}
				} else {
					if (FlxG.state.subState.members[3].graphic.assetPath == 'assets/images/menuDesatGooey.png') {
						FlxG.state.subState.members[3].loadGraphic(Paths.image('menuDesat'));
					}
				}
			}
		}

		if (ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.debug.charting.ChartEditorState") {
			if (FlxG.state.menuBG != null) {
				if (FlxG.state.selectedVariation == 'gooey')
					if (FlxG.state.menuBG.graphic.assetPath == 'assets/images/menuDesat.png') {
						FlxG.state.menuBG.loadGraphic(Paths.image('menuDesatGooey'));
					}
			} else {
				if (FlxG.state.menuBG.graphic.assetPath == 'assets/images/menuDesatGooey.png') {
					FlxG.state.menuBG.loadGraphic(Paths.image('menuDesat'));
				}
			}
		}

		if (ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.options.OptionsState") {
			if (optionNumber == 0) {
				for (i in 0...FlxG.state.members[1].members[1].members[0].members.length) {
					if (FlxG.state.members[1].members[1].members[0].members[i].label.text == "Default Player")
						optionNumber = i;
				}
			}
		}
	}

	public function onStateChangeEnd(event:StateChangeScriptEvent) {
		addedTitle = false;

		if (Std.isOfType(event.targetState, OptionsState)) {
			if (event.targetState.optionsCodex.pages.get("preferences") != null) {
				event.targetState.optionsCodex.pages.get("preferences")
					.createPrefItemEnum('Gooey Menu', "Switch between using Gooey Mix's or FNF's menu themes.",
						['Always On' => 'Always On', 'Off' => 'Off', 'Gooey Selected' => 'Gooey Selected'], function(value:String, oValue:String):Void {
							FlxG.save.data.GooeyMixMenu = value;
							FlxG.save.data.flush;
					}, FlxG.save.data.GooeyMixMenu);
			}
		}
	}

	function addTitleScreenObjects():Void {
		FlxG.state.gfDance.frames = Paths.getSparrowAtlas('floraDanceTitle');
		FlxG.state.gfDance.animation.addByPrefix('danceLeft', 'eepy', 24, true);
		FlxG.state.gfDance.animation.addByPrefix('danceRight', 'eepy', 24, true);
		FlxG.state.gfDance.animation.play('dance');
		FlxG.state.gfDance.shader = FlxG.state.swagShader.shader;
		FlxG.state.gfDance.visible = false;
		FlxG.state.gfDance.x = 550;
		FlxG.state.gfDance.y = 40;

		FlxG.state.logoBl.frames = Paths.getSparrowAtlas('logoBumpin-gooey');
		FlxG.state.logoBl.scale.x = 0.85;
		FlxG.state.logoBl.scale.y = 0.85;
		FlxG.state.logoBl.x = -170;
		FlxG.state.logoBl.y = -100;
		FlxG.state.logoBl.animation.addByPrefix('bump', 'logo bumpin', 24, true);

		FlxG.state.gfDance.visible = true;
		gooeyWindow();
	}
}
