import funkin.play.PlayState;
import funkin.play.stage.Stage;
import funkin.graphics.shaders.WiggleEffectRuntime;
import funkin.graphics.shaders.WiggleEffectType;
import flixel.addons.effects.FlxTrail;
import funkin.play.Countdown;
import funkin.play.character.CharacterType;
import funkin.graphics.shaders.DropShadowShader;
import flixel.FlxG;

class SchoolEvilGooeyStage extends Stage
{
  function new()
  {
    super('schoolEvilGooey');
  }

  var wiggleBack:FlxRuntimeShader = null;
  var wiggleSchool:FlxRuntimeShader = null;
  var wiggleGround:FlxRuntimeShader = null;
  var wiggleSpike:FlxRuntimeShader = null;

  override function buildStage()
  {
    super.buildStage();

    wiggleBack = new WiggleEffectRuntime(2 * 0.8, 4 * 0.4, 0.011, WiggleEffectType.DREAMY);
    wiggleSchool = new WiggleEffectRuntime(2, 4, 0.017, WiggleEffectType.DREAMY);
    wiggleSpike = new WiggleEffectRuntime(2, 4, 0.01, WiggleEffectType.DREAMY);
    wiggleGround = new WiggleEffectRuntime(2, 4, 0.007, WiggleEffectType.DREAMY);

    if (FlxG.save.data.gooeyShaders != false)
	{
    getNamedProp('school').shader = wiggleSchool;
    getNamedProp('evilstreet').shader = wiggleGround;
    getNamedProp('backspikes').shader = wiggleBack;
    getNamedProp('backspike').shader = wiggleSpike;
  }
  }


  override function onUpdate(event:UpdateScriptEvent)
  {
    super.onUpdate(event);

    if (wiggleBack != null)
    {
      wiggleBack.update(event.elapsed);
      wiggleSchool.update(event.elapsed);
      wiggleGround.update(event.elapsed);
      wiggleSpike.update(event.elapsed);
    }
  }

  function kill()
  {
    super.kill();
    wiggleBack = null;
    wiggleSchool = null;
    wiggleGround = null;
    wiggleSpike = null;
  }


  override function addCharacter(character:BaseCharacter, charType:CharacterType):Void {
		// Apply the shader automatically to each character as it gets added.
		super.addCharacter(character, charType);
    if (FlxG.save.data.gooeyShaders != false)
	{
		trace('Applied stage shader to ' + character.characterName);

		var rim = new DropShadowShader();
		rim.setAdjustColor(-90, 0, 24, 5);
    	rim.color = 0xFF690832;
		rim.antialiasAmt = 0;
		rim.attachedSprite = character;
		rim.distance = 5;

		switch(charType){
			case CharacterType.BF:

         //rim.color = 0xFF4a0523;
				rim.angle = 180;
				character.shader = rim;
		    rim.distance = 3;


				character.animation.callback = function() {
					if (getBoyfriend() != null)
					{
      			rim.updateFrameInfo(getBoyfriend().frame);
					}
    		};

			case CharacterType.GF:
				rim.angle = 180;
				character.shader = rim;
				 rim.distance = 3;
				character.animation.callback = function() {
      		rim.updateFrameInfo(getGirlfriend().frame);
    		};

			case CharacterType.DAD:

				rim.angle = 90;
				character.shader = rim;
		    rim.setAdjustColor(-40, -10, 24, 0);
			

				character.animation.callback = function() {
      		rim.updateFrameInfo(getDad().frame);
    		};

			default:

		}

  }
	}


}
